---
- name: Deploying a laravel app
  hosts: all
  become: true
  become_method: sudo
  vars:
    db_user: demoproject
    db_pass: demoproject
    db_name: demoproject
    diretory: suleiman-demo-project
    app_name: laravel

  tasks:

    - name: Update and upgrade apt packages
      become: true
      apt:
        update_cache: yes
        upgrade: 'yes'

    - name: Installing some dependencies
      package: 
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - curl
        - wget
        - unzip
        - git 
        - apache2

    - name: Installing ca certificates
      shell: apt -y install lsb-release apt-transport-https ca-certificates

    - name: adding the ondrej php ppa
      apt_repository:
        repo="ppa:ondrej/php"
     
    - name: updating and upgrading apt packages
      apt:
        update_cache: yes
        upgrade: 'yes'

    - name: Installing php8.1 and the needed extensions
      apt:
         name: "{{ item }}"
         state: present
         update_cache: yes
      with_items: 
         - php8.1 
         - libapache2-mod-php
         - php8.1-mysql
         - php8.1-common
         - php8.1-mysql
         - php8.1-xml
         - php8.1-xmlrpc
         - php8.1-curl
         - php8.1-gd
         - php8.1-imagick
         - php8.1-cli
         - php8.1-dev
         - php8.1-imap
         - php8.1-mbstring
         - php8.1-opcache
         - php8.1-soap
         - php8.1-zip
         - php8.1-intl

    - name: updating and upgrading apt packages
      apt:
        update_cache: yes
        upgrade: 'yes'
    
    - name: Getting mysql .deb url
      get_url: 
        url="https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb"
        dest="$HOME/mysql-apt-config_0.8.22-1_all.deb"
 
    - name: Install mysql .deb package
      apt: deb="$HOME/mysql-apt-config_0.8.22-1_all.deb"

    - name: install pip3
      apt:
        name: python3-pip 
        state: present

    - name: Install pymysql python package
      ansible.builtin.pip:
        name: pymysql

    - name: Installing mysql-server
      apt:
        name: mysql-server
        state: present
        update_cache: yes

    - name: start and enable mysql
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Creating a Database user
      mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_pass }}"
        privileges: '*.*:ALL'
        host: '%'
        state: present

    - name: Creating a database
      mysql_db:
        name: "{{ db_name }}"
        state: present

    - name: Enable remote login to mysql
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        backup: yes
      notify:
        - Restart mysql

    - name: cloning the laravel app 
      git: >
        repo: https://github.com/f1amy/laravel-realworld-example-app.git
        dest: $HOME/{{ directory }}/{{ app_name }}
        force: yes

    - name: Removing the default web.php file
      shell: rm -rf $HOME/{{ directory }}/{{ app_name }}/routes/web.php

    - name: copying the web.php to remote host
      copy:
        src: web.php
        dest: $HOME/{{ directory }}/{{ app_name }}/routes/web.php
        state: present

    - name: copying the .env file to remote host
      copy:
        src: .env
        dest: $HOME/{{ directory }}/{{ app_name }}/.env
        state: present

    - name: Download and install Composer
      shell: curl -sS https://getcomposer.org/installer | php
      args:
        chdir: /usr/src/
        creates: /usr/local/bin/composer
        warn: false
      become: yes

    - name: Add Composer to global path
      copy: 
        remote_src: yes
        src: /usr/src/composer.phar      
        dest: /usr/local/bin/composer
        group: root
        mode: '0755'
        owner: root
      become: yes

    - name: "Composer  install"
      become: false
      composer:
        command: install
        global_command: false
        working_dir: $HOME/{{ directory }}/{{ app_name }}
    
    - name: run migration artisan migrate
      shell: php $HOME/{{ directory }}/{{ app_name }}/artisan migrate
      ignore_errors:  true

    - name: run migration fresh
      shell: php $HOME/{{ directory }}/{{ app_name }}/artisan migrate:fresh
      ignore_errors: true

    - name: run migration seed
      shell: php $HOME/{{ directory }}/{{ app_name }}/artisan migrate --seed
      ignore_errors: true

    - name: run migration refresh
      shell: php $HOME/{{ directory }}/{{ app_name }}/artisan migrate:refresh --seed
      ignore_errors: true

    - name: Changing Directory Permissions
      shell: sudo chmod -R 775 $HOME/{{ directory }}/{{ app_name }}/

    - name: Changing Directory Ownership
      shell: sudo chown -R www-data:www-data $HOME/{{ directory }}/

    - name: Moving the app to /var/www
      shell: sudo mv $HOME/{{ directory }} /var/www/

    - name: create apache virtualhost for domain
      copy: 
        src: 
        dest: /etc/apache2/sites-available/{{ directory }}.conf

    - name: permission for laravel conf file
      shell: sudo chmod -R 777 /etc/apache2/sites-available/{{ directory }}.conf

    - name: Disable default apache sit
      command: sudo a2dissite 000-default.conf

    - name: Update a2ensite
      command: sudo a2ensite {{ directory }}

    - name: Enable the Apache rewrite module
      command:  sudo a2enmod rewrite

      notify:
        - restart apache2
